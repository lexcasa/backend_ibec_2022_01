BASE DE DATOS ( MYSQL )

- Para que sirve?

    -> Almacenar datos y persistir en el tiempo
    -> Abstraer la realidad y convertir en datos


EJEMPLO: Tienda de celulares donde los clientes pueden comprar (que: celular) online

    -> Cliente - Compra - Producto

    -> Entidades: Conjunto de caracteristicas que hacen unico los actores del problema
    -> Modelo: Transformar la entidad en datos

    -> Entidades: Cliente, Producto
    -> Relacion: Comprar


    Cliente: {
        nombre, 
        documento,
        email,
        fechaNacimiento
    }

    Producto: {
        nombre,
        precio,
        marca
    }

    MYSQL: Base de datos relacional

        Modelo: Una tabla donde sus columnas hacen referencia a las propiedades de mi entidad

    Tabla: Cliente
        -> | nombre | documento | email             | fechaNacimiento |
           | Alex   | 123213    | alex@gmail.com    | 1991-12-29      | 

    Tabla: Producto

        -> | nombre     | precio | marca |
           | iPhone 11  | 13213  | apple | 

    PASOS PARA MODELAR UN PROBLEMA

        -> Identificar las entidades (ver los actores del problema)
        -> Identificar las relaciones
        -> Crear las tablas de la base de datos

    RELACION: 

    Compra: {
        cliente,
        producto,
        cantidad
    }

    Tabla: Compra

        -> | cliente | producto     | cantidad |
           | Alex    | iPhone 11    | 2        | 


    EJERCICIO RAPIDO #1: Deposito de cafe (bolsas de cafe) y quiero tener control del stock

        -> Cuales son los actores del problema
        -> Relacion

    
    EJERCICIO RAPIDO #2: Tengo una tienda de componentes para autos y quiero saber cuantos componentes vendi por marca

        -> Cuales son los actores del problema
        -> Relacion


    SOL #1: 

    Entidades: 

        -> Producto (cafe)
        -> Proveedor 

    Relacion: 

        -> stock

    Producto: {
        id,
        nombre,
        precio,
        marca
    }

    Proveedor: {
        id,
        nombre,
        rut,
        rubro
    }

    Stock: {
        idProducto, 
        idProveedor,
        cantidad
    }

    Tabla: Stock

        -> | nombre         | proveedor     | cantidad |
           | Juan Valdez    | Pepe SA       | -2       |
           | Juan Valdez    | Pepe SA       | 10       |
    
    SOL. #2 / 01

        Entidades: 

            -> Componente
            -> Cliente

        Relacion: 

            -> Compra


        Componente: {
            nombre,
            marca,
            modelo
        }

        Cliente: {
            nombre,
            documento,
            email
        }

        Compra: {
            componente,
            cliente,
            cantidad
        }
    
    SOL. #2 / 02

        Entidades:

            - Componente
            - Marca
            - Cliente

        Componente: {
            nombre,
            modelo
        }

        Marca: {
            nombre
        }

        Cliente: {
            nombre,
            documento,
            email
        }

       Relaciones:

            - ComponenteMarca
            - Compra

                Compra { 
                    componente,
                    cliente,
                    cantidad
                }

                ComponenteMarca {
                    componente,
                    marca
                }
    

    SQL: Structured Query Lang

        - Fundamentos de datos
            - Manipular los datos de las operaciones CRUD de la base de datos
                -> Create
                -> Read
                -> Update
                -> Delete

    
    CREATE: 
        -> Crear un registro en la tabla de producto

        INSERT INTO productos (nombre, precio, marca)
        VALUES ("CAFE J. VALDEZ", 120, "JUAN VALDEZ");
